# docker-compose down && docker-compose up --build
version: '3'

services:
  frontend:
    build:
      context: .
      dockerfile: dockerfile.dev
    image: shaheermir/frontend:latest
    ports:
      - '3000:3000'
    volumes:
      - /app/node_modules
      - ./:/app
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
  tests:
    build:
      context: .
      dockerfile: dockerfile.dev
    image: shaheermir/frontend-tests:latest
    stdin_open: true
    volumes:
      - /app/node_modules
      - ./:/app
    command: ['npm', 'run', 'test']
# This solution for testing is kinda wack, as you dont get to have access to interactive mode.
# You can try exec or run but docker always attaches itself to the primary process of the container (ID 1).

# The other option is to run `docker run -it containerId npm run test`. This will get you access to the process
# in an interactive mode, but you gotta manually look up container id everytime.
